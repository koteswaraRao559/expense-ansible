- name: Disabling Default node.js
  ansible.builtin.shell: dnf module disable nodejs -y

- name: Enabling Node.js of version 18
  ansible.builtin.shell: dnf module enable nodejs:18 -y

- name: Install nodejs
  ansible.builtin.dnf:
    name: nodejs
    state: present

- name: Copy Backend Service file
  ansible.builtin.template:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: Add Application user
  ansible.builtin.user:
    name: expense

- name: Import Common Role - App Pre-Requisites
  ansible.builtin.import_role:
    name: common
    tasks_from: app-prereq
  vars:
    app_dir: /app
    component: backend
    app_user: expense

- name: Download nodejs dependencies
  ansible.builtin.shell: npm install
  args:
    chdir: /app

- name: install newrelic nodejs library
  ansible.builtin.shell: npm install newrelic --save
  args:
    chdir: /app

- name: Copy Backend StartUP script file
  ansible.builtin.template:
    src: run.sh
    dest: /app/run.sh

- name: Install MySQL client
  ansible.builtin.dnf:
    name: mysql
    state: present

- name: load schema
  ansible.builtin.shell: mysql -h {{ lookup('amazon.aws.aws_ssm', 'backend.{{env}}.DB_HOST', region='us-east-1' ) }} -u{{ lookup('amazon.aws.aws_ssm', 'backend.{{env}}.DB_USER', region='us-east-1' ) }} -p{{ lookup('amazon.aws.aws_ssm', 'backend.{{env}}.DB_PASS', region='us-east-1' ) }} < /app/schema/backend.sql

- name: Import ELK Role - Filebeat
  ansible.builtin.import_role:
    name: elk
    tasks_from: filebeat

- name: Start Backend Service
  ansible.builtin.systemd:
    name: backend
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Import Prometheus - node-exporter
  ansible.builtin.import_role:
    name: prometheus
    tasks_from: node-exporter



